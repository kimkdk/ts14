<!-- Reliable Software and Architecture.

     Mandatory project: TS14.

 * Copyright 2014 Henrik Baerbak Christensen, Aarhus University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<project name="ts14" default="help" basedir="."
	 xmlns:jacoco="antlib:org.jacoco.ant">

  <!-- Add this to the namespace declaration above to use Ivy
       xmlns:ivy="antlib:org.apache.ivy.ant"
  -->

  <!-- Several targets are copied from the Ivy tutorials -->
  <property name="lib.dir" value="lib" />
  <property name="build.dir" value="build" />
  <property name="src.dir" value="src" />  
  <property name="test.dir" value="test" />

  <property name="test.output.directory" value="TEST-RESULT"/>

  <!-- paths used for compilation and run  -->
  <path id="lib.path.id">
    <fileset dir="${lib.dir}" />
  </path>
  <path id="run.path.id">
    <path refid="lib.path.id" />
    <path location="${build.dir}" />
  </path>

  <!-- JaCoCo Coverage analysis -->
  <taskdef uri="antlib:org.jacoco.ant" 
	   resource="org/jacoco/ant/antlib.xml">
    <classpath path="lib/jacocoant.jar"/>
  </taskdef>
  <property name="jacoco.report.dir" value="${test.output.directory}/report" />
  <property name="jacoco.exec" value="${test.output.directory}/jacoco.exec" />


  <target name="help">
    <echo>
TS14 project / Reliable Software and Architecture - Mandatory project
  Targets 
    clean:     Removes all bytecode
    resolve:   Download modules identified in the ivy.xml

    test:      Run automated JUnit test cases
    coverage:  Run tests and generate JaCoCo coverage report

    week:      Run TS14 on resource/timesag.txt - Week overview
    cate:      Run TS14 on resource/timesag.txt - Category overview
    tran:      Run TS14 on resource/timesag.txt - Transport mode overview
    	
  Author: Henrik Baerbak Christensen
    </echo>
  </target>
  
  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${test.output.directory}"/>
  </target>
  
  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${test.output.directory}"/>
  </target>


  <!-- ================================= 
       target: resolve              
       ================================= -->
  <target name="resolve" 
	  description="--> retreive dependencies with ivy">
    <!-- Remove comment if you use Ivy
    <ivy:retrieve/>
    -->
  </target>    
  
  <!-- ================================= 
       target: report              
       ================================= -->
  <target name="report" depends="resolve" 
	  description="--> generates a report of dependencies">
    <!-- Remove comment if you use Ivy
    <ivy:report todir="${build.dir}"/>
    -->
  </target>

  <!-- compilation tasks -->
  <target name="build-src" depends="prepare,resolve"
	  description="--> compile production code.">
    <javac srcdir="${src.dir}"
	   destdir="${build.dir}"
	   debug="on" 
	   classpathref="lib.path.id" 
	   includeAntRuntime="false">
    </javac>
  </target>

  <target name="build-test" depends="build-src"
	  description="--> compile test code">
    <javac srcdir="${test.dir}"
	   destdir="${build.dir}"
	   debug="on" 
	   classpathref="lib.path.id" 
	   includeAntRuntime="false">
    </javac>
  </target>

  <target name="copy-resource">
    <!-- empty -->
  </target>
  
  <target name="build-all" 
	  depends="build-src,build-test,copy-resource"/>

  <!-- Run JUnit testing -->
  <target name="test"  depends="build-all">
    <junit printsummary="yes" fork="yes" 
	   forkmode="once"
	   haltonfailure="yes">
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${test.output.directory}">
	<fileset dir="test">
	  <include name="**/*Test*.java"/>
	</fileset>
      </batchtest>
      <classpath refid="run.path.id"/>
    </junit>
  </target>

  <!-- Run JUnit with JaCoCo code coverage -->
  <target name="run.junit" depends="build-all">
    <jacoco:coverage destfile="${jacoco.exec}" >
      <junit printsummary="yes" fork="yes" 
	     forkmode="once"
	     haltonfailure="yes">
	<formatter type="plain"/>
	<batchtest fork="yes" todir="${test.output.directory}">
	  <fileset dir="test">
	    <include name="**/*Test*.java"/>
	  </fileset>
	</batchtest>
	<classpath refid="run.path.id"/>
      </junit>
    </jacoco:coverage>
  </target>

  <target name="coverage" depends="run.junit"
	  description="--> Generate code coverage report in the report dir">
    <jacoco:report>
      <executiondata>
        <file file="${jacoco.exec}"/>
      </executiondata>
      <structure name="TS14 Test" >
        <classfiles>
          <fileset dir="${build.dir}">
	    <include name="**/*.class"/>
	  </fileset>
        </classfiles>
        <sourcefiles encoding="UTF-8" tabwidth="2">
	  <fileset dir="${src.dir}"/>
	  <fileset dir="${test.dir}"/>
        </sourcefiles>
      </structure>
      <html destdir="${jacoco.report.dir}"/>
    </jacoco:report>
    <echo message="To see report, browse to index.html at ${jacoco.report.dir}."/>
  </target>


  <!-- execution -->
  <target name="week" depends="build-all">
    <java classpathref="run.path.id" classname="cs.rsa.ts14.manual.Timesag">
      <arg value="W"/>
      <arg value="resource/timesag.txt"/>
    </java>
  </target>
  <target name="cate" depends="build-all">
    <java classpathref="run.path.id" classname="cs.rsa.ts14.manual.Timesag">
      <arg value="C"/>
      <arg value="resource/timesag.txt"/>
    </java>
  </target>
  <target name="tran" depends="build-all">
    <java classpathref="run.path.id" classname="cs.rsa.ts14.manual.Timesag">
      <arg value="T"/>
      <arg value="resource/timesag.txt"/>
    </java>
  </target>

</project>
